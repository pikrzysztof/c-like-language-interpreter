11 V 2015
Interpreter QCL napisany przez Krzysztofa Piecucha, nr albumu 332534.
Implementacja jest częściowa, brakuje w niej najciekawszych rzeczy, czyli
części kwantowej. Zamiast tego powstawiane są zaślepki, aby można było poprawić
projekt. Wejście na taką zaślepkę skutkuje kraksą (undefined).
Tylko jeden "dobry" plik (który na dodatek kończy się dzieleniem przez zero),
za to pokazujący wszyskto co interpreter potrafi.
Cały program wygląda dość brzydko i wymaga poprawienia kilku szczegółów.
Jak na razie interpreter obsługuje co następuje:
- typy boolean, int, zmienne zespolone (niestety, nie można ich skutecznie
używać w forze, bo są na doublach),
string (napisy są stałe i nie bardzo da się z nimi cokolwiek zrobić, oprócz
wypisywania)
- obsługa dzielenia przez zero - inne błedy wykonania jak na razie nie są
możliwe
- pętle if, while, for z opcjonalnym krokiem
- słowo kluczowe print wypisujące o co się je poprosi
- arytmetyka (bez potęg, te później), operatory
- statyczna kontrola typów
- parsowanie całego QCL, ale po parsowaniu interpreter kończy się na błędzie, bo
jeszcze nie umie tego wykonać i sprawdzić typów.
- statycznie sprawdzane stałe
Jedną z niezbyt atrakcyjnych cech języka jest możliwość deklarowania tylko przed
rozpoczęciem wykonywania instrukcji, takie jeszcze bardziej ograniczone ANSI C
(pod tym względem).